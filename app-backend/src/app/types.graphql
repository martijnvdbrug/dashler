scalar Date

interface GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
}

type Dashboard implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  name: String
  description: String
  blocks: [Block!]!
}

type Block implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  name: String!
  uptime: Uptime
  buttons: [Button!]!
}

type Uptime implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  url: String!
  checkInterval: Int
  webhook: String
  disabledHours: HourRange
  stats: UptimeStats
}

type HourRange {
  from: Date
  to: Date
}

type UptimeStats implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  ms0_500: Int
  ms500_1: Int
  s1_2: Int
  s2: Int
  error: Int
}

type Button implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  label: String
  url: String
}

type User implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  lastLogin: Date
  email: String
  firstname: String
  familyname: String
  picture: String
}

type Team implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  members: [User!]!
  plan: Plan
  dashboards: [Dashboard!]!
}

type Plan implements GraphqlNode {
  id: ID!
  createdAt: Date
  updatedAt: Date
  maxDashboards: Int
  maxBlocks: Int
  maxUptimeInterval: Int
  maxMembers: Int
}
